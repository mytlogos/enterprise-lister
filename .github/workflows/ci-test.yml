
name: Node.js CI Build-Test-Release

on:
  pull_request:
    branches: [ master ]
  push:
    branches:
      - master
      - next

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    env:
      dbHost: "localhost"
      dbPassword: "none"
      dbUser: enterprise
      dbPort: 3306
    steps:
      - run: sudo service mysql stop
      - run: |
          curl -sS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | sudo bash -s -- --mariadb-server-version="mariadb-10.6"
          sudo apt update
          sudo apt install mariadb-server mariadb-client
          sudo service mariadb start
          sudo journalctl -xe
          sudo mariadb -u root -e "CREATE USER '$dbUser'@localhost IDENTIFIED BY '$dbPassword';"
          sudo mariadb -u root -e "GRANT ALL PRIVILEGES ON *.* TO '$dbUser'@localhost;"
          sudo mariadb -u root -e "CREATE DATABASE enterprise;"
          sudo mariadb -u root -e "CREATE DATABASE enterprise_test;"
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm install ts-node
      - run: npm run build --ws
      # runs npm test and comments coverage on pr
      - uses: mattallty/jest-github-action@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          coverage-comment: false

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        continue-on-error: true
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: reports/jest-*.xml    # Path to test results
          reporter: jest-junit        # Format of test results

      - uses: artiomtr/jest-coverage-report-action@v2.0-rc.6
        if: ${{ github.event_name == 'pull_request' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          threshold: 30
          test-script: npx jest --silent --ci --coverage --coverageReporters="text" --coverageReporters="text-summary" --testLocationInResults --json --outputFile="report.json" --forceExit
        continue-on-error: true

      - run: zip -r dist.zip package.json package-lock.json packages/core/dist packages/server/dist packages/scraper/dist packages/website/dist
      - run: zip -r dist-src.zip package.json package-lock.json packages/
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
