import { Scraper } from "./scraperTools";
import { Dependant, ScraperJob } from "./types";
import { Job, JobCallback } from "../jobQueue";
export declare type PromiseConsumer = (item: any) => Promise<any>;
export declare class JobScraper implements Scraper {
    private static processDependant;
    private paused;
    private readonly helper;
    private readonly queue;
    private readonly dependantMap;
    constructor();
    addDependant(dependant: Dependant): void;
    on(event: string, callback: (value: any) => void): void;
    removeDependant(dependant: Dependant): void;
    setup(): Promise<void>;
    start(): void;
    pause(): void;
    stop(): void;
    queuePeriodicEmittable(key: string, interval: number, item: any, cb: PromiseConsumer): Job | null;
    queuePeriodic(interval: number, cb: JobCallback): Job;
    queueOneTimeEmittable(key: string, item: any, cb: PromiseConsumer): Job | null;
    addScraperJob(value: ScraperJob): void;
    private queueOneTimeEmittableJob;
    private queuePeriodicEmittableJob;
    private queuePeriodicJob;
    private processJobCallback;
    private processJobCallbackResult;
    private collectEmittable;
}
export declare const DefaultJobScraper: JobScraper;
